#FROM --platform=$TARGETPLATFORM golang:1.15-alpine as build_bin
FROM golang:1.15-alpine as build_bin
ENV GO111MODULE=on
ENV GOPROXY=https://goproxy.io
ENV CGO_ENABLED=1 
WORKDIR /go/src/github.com/dragonflyoss/Dragonfly
RUN sed -i 's/dl-cdn.alpinelinux.org/mirrors.ustc.edu.cn/g' /etc/apk/repositories
RUN apk update && apk --no-cache add build-base git &&  rm -rf /var/cache/apk/*
COPY . /go/src/github.com/dragonflyoss/Dragonfly
# build dfget
RUN go build -ldflags "-s -w" -o bin/dfget cmd/dfget/main.go
# build dfdaemon
RUN go build -ldflags "-s -w" -o bin/dfdaemon cmd/dfdaemon/main.go
# build supernode
RUN go build -ldflags "-s -w" -o bin/supernode cmd/supernode/main.go

#FROM --platform=$TARGETPLATFORM nginx:1.19.2-alpine as build_img
FROM nginx:1.19.2-alpine as build_img
RUN sed -i 's/dl-cdn.alpinelinux.org/mirrors.ustc.edu.cn/g' /etc/apk/repositories
RUN apk update && apk --no-cache add ca-certificates bash
ADD ./hack/start-supernode.sh /root/start.sh
ADD ./hack/supernode-nginx.conf /etc/nginx/nginx.conf
COPY --from=build_bin /go/src/github.com/dragonflyoss/Dragonfly/bin/supernode /opt/dragonfly/df-supernode/supernode
COPY --from=build_bin /go/src/github.com/dragonflyoss/Dragonfly/bin/dfdaemon /opt/dragonfly/df-client
COPY --from=build_bin /go/src/github.com/dragonflyoss/Dragonfly/bin/dfget /opt/dragonfly/df-client
RUN ln -s /opt/dragonfly/df-client/dfget /usr/local/bin/dfget
EXPOSE 8001 8002

ENTRYPOINT ["/root/start.sh"]
